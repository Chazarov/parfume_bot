services:
  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: qwerty
    networks:
      - app-network

  web:
    build: 
      context: .
      dockerfile: ./web/Dockerfile
    command: sh -c "cd app && python manage.py collectstatic --noinput && gunicorn core.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - ./web:/app
      - static_volume:/app/static
      - media_volume:/app/media
    ports:
      - "8000:8000"
    depends_on:
      - db
      - bot
    environment:
      - ALLOWED_HOSTS=127.0.0.1,83.222.24.44,laianbotrus.ru
      - URLS=http://83.222.24.44:8000,http://83.222.24.44,http://laianbotrus.ru,https://laianbotrus.ru
      - SUPERUSER_PASS=1124816
      - SUPERUSER_NAME=admin
      - SUPERUSER_EMAIL=zaharowanrew@gmail.com 
      - USE_SSL=True
      - USE_DEBUG_MODE=false
      - DB_USER=postgres
      - DB_PASSWORD=qwerty
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=postgres
      - DJANGO_SECRET_KEY=aDSFHGOIHihiouPIUiuedf23787823__!!!
      - BOT_API_URL=http://bot:8080
    networks:
      - app-network
      

  nginx:
    build: 
        context: .
        dockerfile: ./nginx/Dockerfile
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./web/app/static:/usr/share/nginx/html/static
      - ./web/app/media:/usr/share/nginx/html/media
      - /etc/letsencrypt:/etc/letsencrypt:ro  
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
    networks:
      - app-network

  bot:
    build:
      context: .
      dockerfile: ./bot/Dockerfile
    command: python main.py
    volumes:
      - ./bot:/app
    environment:
      - BOT_TOKEN=7730400515:AAFfSdwavxi2pzzwLSS4TWllT7EjIaNs32M
      - MAIN_HOST=0.0.0.0
      - MAIN_PORT=8080
    networks:
      - app-network

volumes:
  postgres_data:
  static_volume: 
  media_volume:

networks:
  app-network:
    driver: bridge